file evgMrm.template {
pattern { SYS,      DEVICE}
        {"$(SYS)", "$(DEVICE)"}
}

file evgSoftEvt.template {
pattern { SYS,      DEVICE     }
        {"$(SYS)", "$(DEVICE)" }
}

file evgAcTrig.template {
pattern { SYS,      DEVICE     }
        {"$(SYS)", "$(DEVICE)" }
}

file evgEvtClk.template {
pattern { SYS,      DEVICE     }
        {"$(SYS)", "$(DEVICE)" }
}

file evgDbus.template {
pattern { SYS,      DEVICE,     ID }
        {"$(SYS)", "$(DEVICE)", 0  }
        {"$(SYS)", "$(DEVICE)", 1  }
        {"$(SYS)", "$(DEVICE)", 2  }
        {"$(SYS)", "$(DEVICE)", 3  }
        {"$(SYS)", "$(DEVICE)", 4  }
        {"$(SYS)", "$(DEVICE)", 5  }
        {"$(SYS)", "$(DEVICE)", 6  }
        {"$(SYS)", "$(DEVICE)", 7  }

}

file evgInput.template {
pattern { SYS,      DEVICE,      OBJ,       ID,  PPS,  DBUSOBJ}
        {"$(SYS)", "$(DEVICE)", "UnivInp",  0,   3,    "Dbus"}
        {"$(SYS)", "$(DEVICE)", "UnivInp",  1,   4,    "Dbus"}
        {"$(SYS)", "$(DEVICE)", "UnivInp",  2,   5,    "Dbus"}
        {"$(SYS)", "$(DEVICE)", "UnivInp",  3,   6,    "Dbus"}
}

file evgOutput.template {
pattern { SYS,      DEVICE,      OBJ,        ID }
        {"$(SYS)", "$(DEVICE)", "UnivOut",   0  }
        {"$(SYS)", "$(DEVICE)", "UnivOut",   1  }
        {"$(SYS)", "$(DEVICE)", "UnivOut",   2  }
        {"$(SYS)", "$(DEVICE)", "UnivOut",   3  }
}

file evgTrigEvt.template {
pattern { SYS,      DEVICE,     ID }
        {"$(SYS)", "$(DEVICE)", 0  }
        {"$(SYS)", "$(DEVICE)", 1  }
        {"$(SYS)", "$(DEVICE)", 2  }
        {"$(SYS)", "$(DEVICE)", 3  }
        {"$(SYS)", "$(DEVICE)", 4  }
        {"$(SYS)", "$(DEVICE)", 5  }
        {"$(SYS)", "$(DEVICE)", 6  }
        {"$(SYS)", "$(DEVICE)", 7  }
}

file evgMxc.template {
pattern { SYS,      DEVICE,     ID }
        {"$(SYS)", "$(DEVICE)", 0  }
        {"$(SYS)", "$(DEVICE)", 1  }
        {"$(SYS)", "$(DEVICE)", 2  }
        {"$(SYS)", "$(DEVICE)", 3  }
        {"$(SYS)", "$(DEVICE)", 4  }
        {"$(SYS)", "$(DEVICE)", 5  }
        {"$(SYS)", "$(DEVICE)", 6  }
        {"$(SYS)", "$(DEVICE)", 7  }
}

file "sfp.template"{
pattern { SYS,      DEVICE,     ID }
        {"$(SYS)", "$(DEVICE)", 0  }
}
