For detailed changelog inspect commits at https://git.psi.ch/epics_drivers/mrfioc2/commits/master


x.x.x :
	- Added option to ignore version errors while initializing the driver. This option also disables enabling and connecting interrupts on PCI devices.
	- Name of iocsh functions for flashing changed. Record in flash.template changed name from *IsSupported-RB to *IsOffsetValid-RB. Added iocsh function to set offset (address where reading/writing from/to the flash chip starts)
	- Event clock can now be set to as low as 45 MHz
	- Scripts that start GUIs now use VME-300 form factor by default (instead VME-230)

2.7.6 Fri 8 Jan 2015 11:00:00 CET:
	- Added flashing support for PCIe and cPCI form factors


2.7.4 Fri 11 Dec 2015 13:00:00 CET:
	- Bug fix, where scripts for GUIs did not accept -d switch
	- SFP alarm handling added to databases and GUIs. Removed printout of powerRx error to shell on each occurance of the error. 

2.7.3 Fri 4 Dec 2015 17:00:00 CET:
	- Updated documentation, readme files, examples, templates and substitution files
	    - macros EVR and EVG replaced with DEVICE
	    - GUIs updated. Also, they now accept SYS and DEVICE macros instead of EVR/EVG macro
	- added FLNK macro to evr-softEvent.template, added similar template (evr-softEvent-measure.template) with performance measurements for received events
	- Fixed the race condition present in PCIe form factors (interupt enabling)
	- Bug fix in data buffer ISR: DataRxCtrl_stop bust be set on each interrupt when dealing with 230 series HW (and/or firmware < 200)
	- Compiles under Windows system (tested on: GNU Make 4.1, Linker Version 12.00.21005.1, Compiler Version 18.00.21005.1 for x64)
	- Resolved a bug in SFP code, where uninitialized 'timer' could cause segmentation fault
	- Data buffer fixes: 
		- changed the way data buffer instance is fetched internally
		- SW overflow is detected only for segments someone is interested in (we don't care for the rest)
		- in order to avoid copying entire data buffer in 300 series, maximum length to copy is derived from segments all users are interested in. This will be further fixed with new HW fixes for the data buffer.
		- user update thread priority can be set by the user
    	- dataBufferUser class now directly exposes underlying Rx and Tx buffer. Prefered way of interfacing with the data buffer are still send() and get() functions.
    	- added userOffset, which enables the user to select where 0 offset will be in respect to the start of the data buffer
    	- minor bug fixes


2.7.2 Fri 20 Nov 2015 08:44:00 CET: 
	- Fixed gated pulsers. Issue was with missing instances of pulsers 28-31 => gate driving pulsers were never enabled
